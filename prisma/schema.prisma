// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Role {
  Leader
  Subleader
  Bendahara
  Operator
  Admin
}

model User {
  nik        String   @id
  password   String
  name       String
  image_url  String?
  role       Role     @default(Operator)
  active     Boolean  @default(true)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  unpaid_taxes Tax[]         @relation("Unpaid User")
  paid_taxes   Tax[]         @relation("Paid User")
  informations Information[] @relation("Information Author")

  @@map("users")
}

model Finance {
  id                Int      @id @default(1)
  balance           Int      @default(0)
  total_transaction Int      @default(0)
  updatedAt         DateTime @updatedAt

  @@map("balance_summary")
}

model Transaction {
  id         String   @id @default(cuid())
  income     Boolean
  title      String
  note       String?
  amount     Int
  images     String[]
  created_at DateTime @default(now())

  @@map("transactions")
}

model Tax {
  id         String   @id @default(cuid())
  month      Int
  year       Int
  amount     Int
  created_at DateTime @default(now())

  unpaid_users User[] @relation("Unpaid User")
  paid_users   User[] @relation("Paid User")

  @@map("taxes")
}

model Information {
  id         String   @id @default(cuid())
  title      String
  note       String?
  images     String[]
  created_at DateTime @default(now())
  author_nik String

  author User @relation("Information Author", fields: [author_nik], references: [nik])

  @@map("informations")
}
